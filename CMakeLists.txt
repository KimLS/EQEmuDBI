CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/" ${CMAKE_MODULE_PATH})

PROJECT(DatabaseInterface)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(MSVC)
	#Set our default locations for zlib/mysql based on x86/x64
	IF(CMAKE_CL_64)
		SET(MYSQL_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/mysql_x64")
		SET(PostgreSQL_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libpq_x64")
	ELSE(CMAKE_CL_64)
		SET(MYSQL_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/mysql_x86")
		SET(PostgreSQL_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libpq_x86")
	ENDIF(CMAKE_CL_64)

	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ELSE(MSVC)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
ENDIF(MSVC)

FIND_PACKAGE(MySQL)
#FIND_PACKAGE(PostgreSQL)
OPTION(DBI_BUILD_TESTS "Build tests." ON)

SET(DBI_LIBRARIES dbi)

IF(MySQL_FOUND)
	SET(DBI_LIBRARIES ${DBI_LIBRARIES} debug ${MySQL_LIBRARY_DEBUG} optimized ${MySQL_LIBRARY_RELEASE})
ENDIF(MySQL_FOUND)

#IF(PostgreSQL_FOUND)
#	SET(DBI_LIBRARIES ${DBI_LIBRARIES} ${PostgreSQL_LIBRARY})
#ENDIF(PostgreSQL_FOUND)

ADD_SUBDIRECTORY(dbi)

IF(DBI_BUILD_TESTS)
	#IF(MySQL_FOUND)
	#	ADD_SUBDIRECTORY(test-mysql)
	#ENDIF(MySQL_FOUND)
	#
	#IF(PostgreSQL_FOUND)
	#	ADD_SUBDIRECTORY(test-postgresql)
	#ENDIF(PostgreSQL_FOUND)
	
	ADD_SUBDIRECTORY(test-sqlite)
ENDIF(DBI_BUILD_TESTS)